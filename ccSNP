#!/bin/bash
shopt -s direxpand
shopt -s expand_aliases
if [ -f ~/.bashrc ]; then source ~/.bashrc; fi
if [ -f ~/.bash_profile ]; then source ~/.bash_profile; fi
if [ -f ~/.bash_alias ]; then source ~/.bash_alias; fi

export CCSNPHOME=$(dirname $(readlink -f ${BASH_SOURCE[0]}))
export EXTBINARIES="$CCSNPHOME/extbinaries"
export PATH=$PATH:$EXTBINARIES:$EXTBINARIES/gatk-4.1.7.0/
source $CCSNPHOME/modules/checkVariables.sh
source $CCSNPHOME/modules/prepRef.sh
source $CCSNPHOME/modules/mergeReads.sh
source $CCSNPHOME/modules/qc.sh
source $CCSNPHOME/modules/align.sh
source $CCSNPHOME/modules/bamprep.sh
source $CCSNPHOME/modules/callvariants.sh
source $CCSNPHOME/modules/callcore.sh
set -e
#usage: ccSNP -1 reads_R2.fastq -2 reads_R2.fastq -r reference.fasta
#software requirements
# FASTQC (better download and create alias), MULTIQC
# sudo apt install pandoc
#R packages: DADA2, rmarkdown, rmdformats, DT, dplyr, ggplot2, plotly, stringr, Biostrings
if [ "$1" == "" ];then
    printHelp
fi
actualfolder=$(pwd)
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -1|--forward|-forward)
    R1="$2"
    shift # past argument
    shift # past value
    ;;
    -2|--reverse|-reverse)
    R2="$2"
    shift # past argument
    shift # past value
    ;;
    -0|--single|-single)
    R0="$2"
    PAIRED="false"
    shift # past argument
    shift
    ;;
    -r|--reference|-reference)
    REFERENCE="$2"
    shift # past argument
    shift # past value
    ;;
    -a|--aligner|-aligner)
    ALIGNER="$2"
    shift # past argument
    shift # past value
    ;;
    -c|--caller|-caller|-scaler|--scaler)
    SCALLER="$2"
    shift # past argument
    shift # past value
    ;;
     -o|-output|--output)
    OUTPUT="$2"
    shift # past argument
    shift # past value
    ;;
    -q|-quality|--quality)
    QUALITY="$2"
    shift # past argument
    shift # past value
    ;;
    -p|-ploidy|--ploidy)
    PLOIDY="$2"
    shift # past argument
    shift # past value
    ;;
    -gc|-gatkcycles|--gatkcycles)
    GCYCLES="$2"
    shift # past argument
    shift # past value
    ;;
    -F|-force|--force)
    FORCE=true
    shift # past argument
    ;;
    -ncc|-nocc|--nocc|--nocallcore)
    NOCC=true
    shift # past argument
    ;;
    -ni|-noin|--noin|--nointegrate)
    NOIN=true
    shift # past argument
    ;;
    -nc|-noclean|--noclean|--noClean|--nocl|-noc)
    CLEAN=false
    shift # past argument
    ;;
    -qc|--readqc|--rqc|--makeQC|--readQC|-mqc|--mqc)
    MAKEQC="true"
    shift
    ;;
    -nochain|-noch|--noChain|--nochain)
    CHAIN="false"
    shift
    ;;
    --debug)
    DEBUG=true
    set -ex
    shift # past argument
    ;;
    -h|--help|-?)
    printHelp
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters

if [[ -n $1 ]]; then
    echo "the following argument lack of parameter: $1"
    exit
fi

##########################

checkVariables

##check output folder
##########################


if [ "$OUTPUT" == "" ];then
    OUTPUT="ccsnp"
fi

if [ -d "$OUTPUT" ];then
    if [ "$FORCE" == "false" ];then
        echo "$(tput setaf 1)ERROR: $OUTPUT directory already exist or use --force to continue (overwriting)"
        exit 1   
    fi
else
    mkdir -p $OUTPUT
fi
cd $OUTPUT

##########################

##executing module selected

#       "qc")
		if [ "$MAKEQC" == "true" ];then
          source $CCSNPHOME/modules/qc.sh
          #READS VARIABLE IS MADE IN CHECKVARIABLE FUNCTION, IT TAKE THE R1&R2 OR R0 AFTER CHECKING IF THEIR EXIST
          qc $READS $QUALITY
        else
            if [ "$PAIRED" == "true" ];then
                mergeReads $READS
            fi
        fi
        PAIRED="false" #after qc or merge, paired are no more r1 and r2 just r0
        
        mkdir -p reference
        cd reference
            cp $REFERENCE .
            REFERENCE=$(echo $(pwd)/$(basename $REFERENCE))
            samtools faidx $REFERENCE
        cd ..

 #      "align")
        for aligner in $(echo "$ALIGNER" | tr ',' '\n')
        do
            prepareRef $aligner $REFERENCE
            align $aligner $READS $REFERENCE
        #########################
        #$BAMFILES is now available. The "align module" export all the bam files available after map steps.
        #########################
 #      "filterbam")
            bamprep $BAMFILES $REFERENCE
            if [ "$CHAIN" == "false" ];then #break in the case no more reads can be mapped for the next aligner
                break
            fi

        done
        #########################
        #$BAMFILES now is updated containing filtered bams
        #########################
 #      "snpcall")
          callvariants $SCALLER $BAMFILES $REFERENCE $PLOIDY $QUALITY

        ###########################
        # VCFFILES is now availbale.
        ###########################
 #      "callcore")
        if [ "$NOCC" == "false" ];then # default value
            if [ "$NOIN" = "false" ];then #default value is false
                for vcf in $(ls  3-callvariant/*.isec.vcf | tr ',' '\n')
                do
                    sampleName=$(basename $vcf | sed 's/.vcf//g')
                    bcftools view $vcf -Ob -o ${sampleName}.bcf
                    bcftools index -f --threads "$(nproc)" ${sampleName}.bcf
                done
                bcftools merge -Ov -o all.vcf *.bcf
                rm -f *.bcf *.csi
            fi
            NOIN="true" #set true to dont delete the last files used
            callcore $VCFFILES
        fi

        ###########################
        # Gather rresults
        ##########################



        #cp 2-bamprep/*.bam .
        #cp 3-callvariant/*vcf .

        if [ $CLEAN == "true" ];then
            rm -rf 0-qc
            rm -rf 1-map
            rm -rf 2-bamprep
            rm -rf 3-callvariant
        fi



echo '
         ___     _,.--.,_
      .-~   ~--"~-.   ._ "-.
     /      ./_    Y    "-. \
    Y       :~     !         Y
    lq p    |     /   Done!  .|
 _   \. .-, l    /          |j
()\___) |/   \_/";          !
 \._____.-~\  .  ~\.      ./
            Y_ Y_. "vr"~  T
            (  (    |L    j  
            [nn[nn..][nn..]
        ~~~~~~~~~~~~~~~~~~~~~~~

'